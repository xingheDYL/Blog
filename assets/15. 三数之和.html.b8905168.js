import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as p,a as n,b as o,d as s,h as c,r as l}from"./app.f2911ab1.js";const i={},u={id:"\u9898\u76EE\u94FE\u63A5-\u4E09\u6570\u4E4B\u548C",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5-\u4E09\u6570\u4E4B\u548C","aria-hidden":"true"},"#",-1),d=s(" \u9898\u76EE\u94FE\u63A5\uFF1A"),k={href:"https://leetcode.cn/problems/3sum/description/",target:"_blank",rel:"noopener noreferrer"},m=s("\u4E09\u6570\u4E4B\u548C"),v=c(`<table><thead><tr><th style="text-align:center;">Category</th><th style="text-align:center;">Difficulty</th><th style="text-align:center;">Likes</th><th style="text-align:center;">Dislikes</th></tr></thead><tbody><tr><td style="text-align:center;">algorithms</td><td style="text-align:center;">Medium (36.19%)</td><td style="text-align:center;">5198</td><td style="text-align:center;">-</td></tr></tbody></table><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 <code>nums</code> \uFF0C\u5224\u65AD\u662F\u5426\u5B58\u5728\u4E09\u5143\u7EC4 <code>[nums[i], nums[j], nums[k]]</code> \u6EE1\u8DB3 <code>i != j</code>\u3001<code>i != k</code> \u4E14 <code>j != k</code> \uFF0C\u540C\u65F6\u8FD8\u6EE1\u8DB3 <code>nums[i] + nums[j] + nums[k] == 0</code> \u3002\u8BF7</p><p>\u4F60\u8FD4\u56DE\u6240\u6709\u548C\u4E3A <code>0</code> \u4E14\u4E0D\u91CD\u590D\u7684\u4E09\u5143\u7EC4\u3002</p><p>**\u6CE8\u610F\uFF1A**\u7B54\u6848\u4E2D\u4E0D\u53EF\u4EE5\u5305\u542B\u91CD\u590D\u7684\u4E09\u5143\u7EC4\u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums = [-1,0,1,2,-1,-4]
\u8F93\u51FA\uFF1A[[-1,-1,2],[-1,0,1]]
\u89E3\u91CA\uFF1A
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0 \u3002
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0 \u3002
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0 \u3002
\u4E0D\u540C\u7684\u4E09\u5143\u7EC4\u662F [-1,0,1] \u548C [-1,-1,2] \u3002
\u6CE8\u610F\uFF0C\u8F93\u51FA\u7684\u987A\u5E8F\u548C\u4E09\u5143\u7EC4\u7684\u987A\u5E8F\u5E76\u4E0D\u91CD\u8981\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums = [0,1,1]
\u8F93\u51FA\uFF1A[]
\u89E3\u91CA\uFF1A\u552F\u4E00\u53EF\u80FD\u7684\u4E09\u5143\u7EC4\u548C\u4E0D\u4E3A 0 \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u793A\u4F8B 3\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums = [0,0,0]
\u8F93\u51FA\uFF1A[[0,0,0]]
\u89E3\u91CA\uFF1A\u552F\u4E00\u53EF\u80FD\u7684\u4E09\u5143\u7EC4\u548C\u4E3A 0 \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>3 &lt;= nums.length &lt;= 3000</code></li><li><code>-105 &lt;= nums[i] &lt;= 105</code></li></ul><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>nSum \u7CFB\u5217\u95EE\u9898\u7684\u6838\u5FC3\u601D\u8DEF\u5C31\u662F<strong>\u6392\u5E8F + \u53CC\u6307\u9488</strong>\u3002</p><p>\u5148\u7ED9\u6570\u7EC4\u4ECE\u5C0F\u5230\u5927\u6392\u5E8F\uFF0C\u7136\u540E\u53CC\u6307\u9488 left \u548C right \u5206\u522B\u5728\u6570\u7EC4\u5F00\u5934\u548C\u7ED3\u5C3E\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u63A7\u5236 nums[left] \u548C nums[right] \u8FD9\u4E24\u6570\u4E4B\u548C\u7684\u5927\u5C0F\uFF1A</p><p>\u5982\u679C\u4F60\u60F3\u8BA9\u5B83\u4FE9\u7684\u548C\u5927\u4E00\u4E9B\uFF0C\u5C31\u8BA9 left++\uFF0C\u5982\u679C\u4F60\u60F3\u8BA9\u5B83\u4FE9\u7684\u548C\u5C0F\u4E00\u4E9B\uFF0C\u5C31\u8BA9 right--\u3002</p><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">threeSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">int</span> left <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> sum <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    right<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                        right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                        left<span class="token operator">++</span><span class="token punctuation">;</span>

                    right<span class="token operator">--</span><span class="token punctuation">;</span>
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function b(g,h){const a=l("ExternalLinkIcon");return e(),p("div",null,[n("h2",u,[r,d,n("a",k,[m,o(a)])]),v])}var _=t(i,[["render",b],["__file","15. \u4E09\u6570\u4E4B\u548C.html.vue"]]);export{_ as default};
