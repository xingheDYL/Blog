import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as p,a as n,b as o,d as s,h as c,r as l}from"./app.9c8f2ec7.js";const i={},u={id:"\u9898\u76EE\u94FE\u63A5-\u56DB\u6570\u76F8\u52A0-ii",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5-\u56DB\u6570\u76F8\u52A0-ii","aria-hidden":"true"},"#",-1),r=s(" \u9898\u76EE\u94FE\u63A5\uFF1A"),k={href:"https://leetcode.cn/problems/4sum-ii/description/",target:"_blank",rel:"noopener noreferrer"},m=s("\u56DB\u6570\u76F8\u52A0 II"),v=c(`<table><thead><tr><th style="text-align:center;">Category</th><th style="text-align:center;">Difficulty</th><th style="text-align:center;">Likes</th><th style="text-align:center;">Dislikes</th></tr></thead><tbody><tr><td style="text-align:center;">algorithms</td><td style="text-align:center;">Medium (63.53%)</td><td style="text-align:center;">656</td><td style="text-align:center;">-</td></tr></tbody></table><p>\u7ED9\u4F60\u56DB\u4E2A\u6574\u6570\u6570\u7EC4 <code>nums1</code>\u3001<code>nums2</code>\u3001<code>nums3</code> \u548C <code>nums4</code> \uFF0C\u6570\u7EC4\u957F\u5EA6\u90FD\u662F <code>n</code> \uFF0C\u8BF7\u4F60\u8BA1\u7B97\u6709\u591A\u5C11\u4E2A\u5143\u7EC4 <code>(i, j, k, l)</code> \u80FD\u6EE1\u8DB3\uFF1A</p><ul><li><code>0 &lt;= i, j, k, l &lt; n</code></li><li><code>nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0</code></li></ul><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]
\u8F93\u51FA\uFF1A2
\u89E3\u91CA\uFF1A
\u4E24\u4E2A\u5143\u7EC4\u5982\u4E0B\uFF1A
1. (0, 0, 0, 1) -&gt; nums1[0] + nums2[0] + nums3[0] + nums4[1] = 1 + (-2) + (-1) + 2 = 0
2. (1, 1, 0, 0) -&gt; nums1[1] + nums2[1] + nums3[0] + nums4[0] = 2 + (-1) + (-1) + 0 = 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]
\u8F93\u51FA\uFF1A1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>n == nums1.length</code></li><li><code>n == nums2.length</code></li><li><code>n == nums3.length</code></li><li><code>n == nums4.length</code></li><li><code>1 &lt;= n &lt;= 200</code></li><li><code>-228 &lt;= nums1[i], nums2[i], nums3[i], nums4[i] &lt;= 228</code></li></ul><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>\u672C\u9898\u89E3\u9898\u6B65\u9AA4\uFF1A</p><ol><li>\u9996\u5148\u5B9A\u4E49\u4E00\u4E2A HashMap\uFF0Ckey \u653E a \u548C b \u4E24\u6570\u4E4B\u548C\uFF0Cvalue \u653E a \u548C b \u4E24\u6570\u4E4B\u548C\u51FA\u73B0\u7684\u6B21\u6570\u3002</li><li>\u904D\u5386\u5927 A \u548C\u5927 B \u6570\u7EC4\uFF0C\u7EDF\u8BA1\u4E24\u4E2A\u6570\u7EC4\u5143\u7D20\u4E4B\u548C\uFF0C\u548C\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u653E\u5230 map \u4E2D\u3002</li><li>\u5B9A\u4E49 int \u53D8\u91CFcount\uFF0C\u7528\u6765\u7EDF\u8BA1 a+b+c+d = 0 \u51FA\u73B0\u7684\u6B21\u6570\u3002</li><li>\u5728\u904D\u5386\u5927 C \u548C\u5927 D \u6570\u7EC4\uFF0C\u627E\u5230\u5982\u679C 0-(c+d) \u5728 map \u4E2D\u51FA\u73B0\u8FC7\u7684\u8BDD\uFF0C\u5C31\u7528 count \u628A map \u4E2D key \u5BF9\u5E94\u7684 value \u4E5F\u5C31\u662F\u51FA\u73B0\u6B21\u6570\u7EDF\u8BA1\u51FA\u6765\u3002</li><li>\u6700\u540E\u8FD4\u56DE\u7EDF\u8BA1\u503C count \u5C31\u53EF\u4EE5\u4E86</li></ol><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fourSumCount</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums3<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EDF\u8BA1\u4E24\u4E2A\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4E4B\u548C\uFF0C\u540C\u65F6\u7EDF\u8BA1\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u653E\u5165map</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">:</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                temp <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7EDF\u8BA1\u5269\u4F59\u7684\u4E24\u4E2A\u5143\u7D20\u7684\u548C\uFF0C\u5728map\u4E2D\u627E\u662F\u5426\u5B58\u5728\u76F8\u52A0\u4E3A0\u7684\u60C5\u51B5\uFF0C\u540C\u65F6\u8BB0\u5F55\u6B21\u6570</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">:</span> nums4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                temp <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> temp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    res <span class="token operator">+=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function b(h,g){const a=l("ExternalLinkIcon");return e(),p("div",null,[n("h2",u,[d,r,n("a",k,[m,o(a)])]),v])}var f=t(i,[["render",b],["__file","454. \u56DB\u6570\u76F8\u52A0 II.html.vue"]]);export{f as default};
