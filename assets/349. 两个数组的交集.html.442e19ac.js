import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as p,a as n,b as o,d as s,h as c,r as l}from"./app.a059c957.js";const i={},u={id:"\u9898\u76EE\u94FE\u63A5-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6","aria-hidden":"true"},"#",-1),d=s(" \u9898\u76EE\u94FE\u63A5\uFF1A"),k={href:"https://leetcode.cn/problems/intersection-of-two-arrays/description/",target:"_blank",rel:"noopener noreferrer"},m=s("\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6"),v=c(`<table><thead><tr><th style="text-align:center;">Category</th><th style="text-align:center;">Difficulty</th><th style="text-align:center;">Likes</th><th style="text-align:center;">Dislikes</th></tr></thead><tbody><tr><td style="text-align:center;">algorithms</td><td style="text-align:center;">Easy (74.28%)</td><td style="text-align:center;">622</td><td style="text-align:center;">-</td></tr></tbody></table><p>\u7ED9\u5B9A\u4E24\u4E2A\u6570\u7EC4 <code>nums1</code> \u548C <code>nums2</code> \uFF0C\u8FD4\u56DE <em>\u5B83\u4EEC\u7684\u4EA4\u96C6</em> \u3002\u8F93\u51FA\u7ED3\u679C\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u4E00\u5B9A\u662F <strong>\u552F\u4E00</strong> \u7684\u3002\u6211\u4EEC\u53EF\u4EE5 <strong>\u4E0D\u8003\u8651\u8F93\u51FA\u7ED3\u679C\u7684\u987A\u5E8F</strong> \u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums1 = [1,2,2,1], nums2 = [2,2]
\u8F93\u51FA\uFF1A[2]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums1 = [4,9,5], nums2 = [9,4,9,8,4]
\u8F93\u51FA\uFF1A[9,4]
\u89E3\u91CA\uFF1A[4,9] \u4E5F\u662F\u53EF\u901A\u8FC7\u7684
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li><li><code>0 &lt;= nums1[i], nums2[i] &lt;= 1000</code></li></ul><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>\u4F7F\u7528 HashSet \u6765\u5B58\u50A8\u6570\u7EC4\u6570\u636E\uFF0C\u904D\u5386\u4E00\u7EC4\u6570\u7EC4\u7684\u503C\u5B58\u50A8\u5230 HashSet \u4E2D\uFF0C\u7136\u540E\u904D\u5386\u53E6\u4E00\u7EC4\u6570\u7EC4\uFF0C\u5C06\u76F8\u7B49\u7684\u503C\u6DFB\u52A0\u5230\u53E6\u4E00\u4E2A HashSet \u4E2D\uFF0C\u6700\u7EC8\u5C06\u5176\u8F6C\u5316\u4E3A\u6570\u7EC4\u8F93\u51FA\u3002</p><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">intersection</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums1<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> nums2 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums2<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> resSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u6570\u7EC41</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            set1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u904D\u5386\u6570\u7EC42\u7684\u8FC7\u7A0B\u4E2D\u5224\u65AD\u54C8\u5E0C\u8868\u4E2D\u662F\u5426\u5B58\u5728\u8BE5\u5143\u7D20</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>set1<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                resSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5C06\u7ED3\u679C\u51E0\u4F55\u8F6C\u4E3A\u6570\u7EC4</span>
        <span class="token keyword">return</span> resSet<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function h(g,b){const a=l("ExternalLinkIcon");return e(),p("div",null,[n("h2",u,[r,d,n("a",k,[m,o(a)])]),v])}var x=t(i,[["render",h],["__file","349. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6.html.vue"]]);export{x as default};
